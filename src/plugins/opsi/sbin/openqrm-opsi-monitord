#!/bin/bash
# this script automatically monitors kvm vms
#
# openQRM Enterprise developed by openQRM Enterprise GmbH.
#
# All source code and content (c) Copyright 2012, openQRM Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the GNU General Public License version 2, unless otherwise agreed with openQRM Enterprise GmbH.
# The latest version of this license can be found here: src/doc/LICENSE.txt
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://openqrm-enterprise.com
#
# Copyright 2012, openQRM Enterprise GmbH <info@openqrm-enterprise.com>
#
# this script automatically monitors opsi auto-installations
OPENQRM_SERVER_BASE_DIR=$(dirname $0)/../../../..
OPENQRM_SERVER_BASE_DIR=$(pushd $OPENQRM_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/opsi/include/openqrm-plugin-opsi-functions
OPENQRM_POSTENCODE="$OPENQRM_SERVER_BASE_DIR/openqrm/sbin/openqrm-postencode"
if [ -f $OPENQRM_RESOURCE_PARAMETER_FILE ]; then
	. $OPENQRM_RESOURCE_PARAMETER_FILE
	OPENQRM_SERVER_IP=$resource_openqrmserver
	export SERVER_PROTOCOL=$openqrm_web_protocol
else
	echo "ERROR: This script runs on an integrated Opsi-Server only!"
	exit 6
fi
export LANG=C
OPENQRM_EVENT="statistics"
OPENQRM_ACTIVE_STATE="transition"
OPENQRM_STARTING_STATE="starting"
OPENQRM_CLIENT_OPSI_INSTALL_DIR="/opt/pcbin/install/openqrm-client"

# define wget to use with https
if [ "$SERVER_PROTOCOL" == "https" ]; then
	WGET_NO_CERT_CHECK="--no-check-certificate --random-file=/dev/random"
fi

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi

# mac is the identifier
RESOURCE_ID=$1
RESOURCE_NAME=$2
RESOURCE_DOMAIN=$3
if [ "$RESOURCE_ID" == "" ] || [ "$RESOURCE_NAME" == "" ]  || [ "$RESOURCE_DOMAIN" == "" ]; then
	echo "Usage: $0 <resource_id> <resource_name> <resource_domain> "
	exit 1
fi


# local used functions
function send_info() {
	current_state=`urlencodestring $OPENQRM_ACTIVE_STATE`
	current_event=`urlencodestring $OPENQRM_EVENT`
	MESSAGEDATA="resource_id=$RESOURCE_ID&resource_uptime=$current_uptime&resource_state=$current_state&resource_event=$current_event";
	OPENQRM_RESOURCE_INFO_URL="$SERVER_PROTOCOL://$resource_openqrmserver/openqrm/action/resource-monitor.php?resource_command=update_info&$MESSAGEDATA"
	wget $WGET_NO_CERT_CHECK -q -O /dev/null "$OPENQRM_RESOURCE_INFO_URL"
}



# uptime
function find_uptime() {
	if [ -f /proc/uptime ]; then
		current_uptime=`cat /proc/uptime | cut -d'.' -f 1`
	fi
	if [ -z "$current_uptime" ]; then
		current_uptime=0
	fi
}


# main loop
while (true); do
	# get install state
	opsi-admin -d method getInstalledProductIds_list $RESOURCE_NAME.$RESOURCE_DOMAIN > /tmp/$RESOURCE_NAME.$RESOURCE_DOMAIN.install.log
	if grep openqrm-client /tmp/$RESOURCE_NAME.$RESOURCE_DOMAIN.install.log; then
			# ready installed, exit the montird, remove the install-info file
			# rm -f $OPENQRM_CLIENT_OPSI_INSTALL_DIR/$RESOURCE_NAME.openqrm-client.conf
			exit 0
	fi
	# uptime
	find_uptime
	# sending statistics
	send_info
	# delay
	sleep $resource_senddelay
done
# never reached
exit 0

















