#!/bin/bash
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2011, openQRM Enterprise GmbH <info@openqrm-enterprise.com>
#

# add path when running from cron
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:$PATH
OPENQRM_SERVER_BASE_DIR=$(dirname $0)/../../../..
OPENQRM_SERVER_BASE_DIR=$(pushd $OPENQRM_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-server-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/idoit/include/openqrm-plugin-idoit-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/idoit/etc/openqrm-plugin-idoit.conf
openqrm_server_get_config

export IDOIT_LOCATION="/var/www/idoit"
export IDOIT_IMPORT_DIRECTORY="$IDOIT_LOCATION/imports"
export IDOIT_ADMIN_USER
export IDOIT_ADMIN_PASSWORD

# get the db access from the idoit plugin config file
# in case it is not set we use the openQRM db credentials
IDOIT_DB_USER=${IDOIT_DB_USER:-$OPENQRM_DATABASE_USER}
IDOIT_DB_PASSWORD=${IDOIT_DB_PASSWORD:-$OPENQRM_DATABASE_PASSWORD}
# set parameters
IDOIT_DB_USER_PARAMETER="-u $IDOIT_DB_USER"
if [ "$IDOIT_DB_PASSWORD" != "" ]; then
	IDOIT_DB_PASSWORD_PARAMETER="-p$IDOIT_DB_PASSWORD"
fi

# define wget to use with https
if [ "$OPENQRM_WEB_PROTOCOL" == "https" ]; then
	WGET="wget -q --no-check-certificate"
else
	WGET="wget -q"
fi
# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi



function idoit_usage() {
	echo "Usage : $0 import <-m mac-address> <-n hostname> <-d resource-id> <-i ipaddress> <-s subnetmask> <-g gateway> <-c description> <-t nettype> <-v netvendor> <-o OS> <-a applications>"
	echo "        $0 remove <-m mac-address>"
	exit 1
}


IDOIT_CTL_CMD=$1
shift

while [ $# -ne 0 ]; do
	case "$1" in
		-n)
			SYSTEM_HOSTNAME=$2
			shift
			;;
		-m)
			SYSTEM_MAC_ADDRESS=$2
			shift
			;;

		-d)
			SYSTEM_ID=$2
			shift
			;;

		-i)
			SYSTEM_IP_ADDRESS=$2
			shift
			;;

		-s)
			SYSTEM_SUBNET_MASK=$2
			shift
			;;

		-g)
			SYSTEM_DEFAULT_GATEWAY=$2
			shift
			;;

		-c)
			SYSTEM_DESCRIPTION=$2
			shift
			;;
		-t)
			SYSTEM_NET_TYPE=$2
			shift
			;;

		-v)
			SYSTEM_NET_VENDOR=$2
			shift
			;;

		-o)
			SYSTEM_OS=$2
			shift
			;;
		-a)
			SYSTEM_APPS=$2
			shift
			;;
		*)
			echo "ERROR: Free commandline arguments are not allowed"
			idoit_usage
			exit 6
			;;
	esac
	shift
done




# main
if [ "$IDOIT_CTL_CMD" == "" ]; then
	idoit_usage
fi


case "$IDOIT_CTL_CMD" in

	import)
		if [ "$SYSTEM_MAC_ADDRESS" == "" ]; then
			idoit_usage
		fi
		echo "Importing $SYSTEM_MAC_ADDRESS in i-doit..."
		CURRENT_DATE=`date  +"%Y-%m-%d %H:%M:%S"`
		#SYSTEM_ID="6"
		#SYSTEM_NAME="kvmvm4"
		#SYSTEM_MAC_ADDRESS="00:18:38:02:c2:6c"
		#SYSTEM_IP_ADDRESS="192.168.88.254"
		#SYSTEM_SUBNET_MASK="255.255.255.0"
		#SYSTEM_DEFAULT_GATEWAY="192.168.88.1"
		#SYSTEM_DESCRIPTION="Virtual Machine on Resource 1"
		#SYSTEM_NET_TYPE
		#SYSTEM_NET_VENDOR
		#SYSTEM_OS
		#SYSTEM_APPS

		echo "-- SYSTEM_ID = $SYSTEM_ID"
		echo "-- SYSTEM_HOSTNAME = $SYSTEM_HOSTNAME"
		echo "-- SYSTEM_IP_ADDRESS = $SYSTEM_IP_ADDRESS"
		echo "-- SYSTEM_NET_TYPE = $SYSTEM_NET_TYPE"
		echo "-- SYSTEM_MAC_ADDRESS = $SYSTEM_MAC_ADDRESS"
		echo "-- SYSTEM_NET_VENDOR = $SYSTEM_NET_VENDOR"
		echo "-- SYSTEM_OS = $SYSTEM_OS"
		echo "-- SYSTEM_APPS = $SYSTEM_APPS"

		# if we do have a ip in the idoit db already we import without-net
		# and update the ip-table later manually to avoid incrementing the ip-id

		IDOIT_IP_ID=`mysql $IDOIT_DB_USER_PARAMETER $IDOIT_DB_PASSWORD_PARAMETER idoit_data -e "SELECT isys_catg_ip_list__id FROM isys_catg_ip_list where isys_catg_ip_list__hostname REGEXP '$SYSTEM_MAC_ADDRESS';" | grep -A1 isys_catg_ip_list__id | tail -n1`
		if [ "$IDOIT_IP_ID" == "" ]; then
			SYSTEM_IDOIT_TEMPLATE="import-template-with-net.xml"
			UPDATE_IP_TABLE="false"
		else
			SYSTEM_IDOIT_TEMPLATE="import-template-without-net.xml"
			UPDATE_IP_TABLE="true"
		fi
		IMPORT_TEMPLATE="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/idoit/etc/templates/$SYSTEM_IDOIT_TEMPLATE"

		cat $IMPORT_TEMPLATE | \
			sed -e "s#@@CURRENT_DATE@@#$CURRENT_DATE#g" | \
			sed -e "s#@@COMPANY_NAME@@#$COMPANY_NAME#g" | \
			sed -e "s#@@SYSTEM_NAME@@#$SYSTEM_HOSTNAME#g" | \
			sed -e "s#@@SYSTEM_ID@@#$SYSTEM_ID#g" | \
			sed -e "s#@@SYSTEM_IP_ADDRESS@@#$SYSTEM_IP_ADDRESS#g" | \
			sed -e "s#@@SYSTEM_SUBNET_MASK@@#$SYSTEM_SUBNET_MASK#g" | \
			sed -e "s#@@SYSTEM_IP_ADDRESS@@#$SYSTEM_IP_ADDRESS#g" | \
			sed -e "s#@@SYSTEM_MAC_ADDRESS@@#$SYSTEM_MAC_ADDRESS#g" | \
			sed -e "s#@@SYSTEM_DESCRIPTION@@#$SYSTEM_DESCRIPTION#g" | \
			sed -e "s#@@SYSTEM_DEFAULT_GATEWAY@@#$SYSTEM_DEFAULT_GATEWAY#g" \
			> $IDOIT_IMPORT_DIRECTORY/$SYSTEM_IDOIT_TEMPLATE


		cd $IDOIT_LOCATION
		./import -u $IDOIT_ADMIN_USER -p $IDOIT_ADMIN_PASSWORD -i 1 $IDOIT_IMPORT_DIRECTORY/$SYSTEM_IDOIT_TEMPLATE
		cd - 1>/dev/null
#        rm -f $IDOIT_IMPORT_DIRECTORY/$SYSTEM_IDOIT_TEMPLATE

		# adjust net-type to ip4
		# find the ip entry
		IDOIT_IP_ID=`mysql $IDOIT_DB_USER_PARAMETER $IDOIT_DB_PASSWORD_PARAMETER idoit_data -e "SELECT isys_catg_ip_list__id FROM isys_catg_ip_list where isys_catg_ip_list__hostname REGEXP '$SYSTEM_MAC_ADDRESS';" | grep -A1 isys_catg_ip_list__id | tail -n1`
		if [ "$IDOIT_IP_ID" != "" ]; then
			echo "- updating ip-id $IDOIT_IP_ID"
			mysql $IDOIT_DB_USER_PARAMETER $IDOIT_DB_PASSWORD_PARAMETER idoit_data -e "update isys_catg_ip_list set isys_catg_ip_list__isys_net_type__id=1 where isys_catg_ip_list__id=$IDOIT_IP_ID";
			# do we need to update the ip-table ?
			if [ "$UPDATE_IP_TABLE" == "true" ]; then
				echo "- updating ip-table with resource infos"
				mysql $IDOIT_DB_USER_PARAMETER $IDOIT_DB_PASSWORD_PARAMETER idoit_data -e "update isys_catg_ip_list set isys_catg_ip_list__hostname='$SYSTEM_HOSTNAME ($SYSTEM_MAC_ADDRESS)', isys_catg_ip_list__dhcp=0, isys_catg_ip_list__address='$SYSTEM_IP_ADDRESS', isys_catg_ip_list__mask='$SYSTEM_SUBNET_MASK', isys_catg_ip_list__primary=1, isys_catg_ip_list__gateway='$SYSTEM_DEFAULT_GATEWAY' where isys_catg_ip_list__id=$IDOIT_IP_ID";
			fi
			exit 0
		else
			exit 1
		fi
		;;

	remove)
		if [ "$SYSTEM_MAC_ADDRESS" == "" ]; then
			idoit_usage
		fi
		echo "Removing $SYSTEM_MAC_ADDRESS from i-doit ..."
		# get the obj id
		IDOIT_OBJECT_ID=`mysql $IDOIT_DB_USER_PARAMETER $IDOIT_DB_PASSWORD_PARAMETER idoit_data -e "SELECT isys_obj__id from isys_obj where isys_obj__title REGEXP '$SYSTEM_MAC_ADDRESS';" | grep -A1 isys_obj__id | tail -n1`
		if [ "$IDOIT_OBJECT_ID" != "" ]; then
			mysql $IDOIT_DB_USER_PARAMETER $IDOIT_DB_PASSWORD_PARAMETER idoit_data -e "delete from isys_catg_ip_list where isys_catg_ip_list__isys_obj__id=$IDOIT_OBJECT_ID";
			mysql $IDOIT_DB_USER_PARAMETER $IDOIT_DB_PASSWORD_PARAMETER idoit_data -e "delete from isys_obj where isys_obj__id=$IDOIT_OBJECT_ID";
		fi
		exit 0
		;;

esac


