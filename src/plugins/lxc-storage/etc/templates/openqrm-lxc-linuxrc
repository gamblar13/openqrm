#!/bin/bash
#
# openQRM Enterprise developed by openQRM Enterprise GmbH.
#
# All source code and content (c) Copyright 2012, openQRM Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the GNU General Public License version 2, unless otherwise agreed with openQRM Enterprise GmbH.
# The latest version of this license can be found here: src/doc/LICENSE.txt
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://openqrm-enterprise.com
#
# Copyright 2012, openQRM Enterprise GmbH <info@openqrm-enterprise.com>
#

# linuxrc for the openQRM initrd
export SHELL=/bin/bash
PATH=/sbin:/bin:/usr/bin:/usr/sbin
export PATH

# main
mount -t proc proc /proc
mkdir -p /dev/fd
ln -sf /proc/self/fd /dev/fd
mknod /dev/tty c 5 0
ln -sf /dev/ram1 /dev/ram
mknod /dev/random c 1 8
mknod /dev/urandom c 1 9
mknod /dev/ptmx c 5 2
chmod 666 /dev/ptmx
mkdir -p /dev/pts
mount /dev/pts
echo 0x0100 > /proc/sys/kernel/real-root-dev
echo 6 > /proc/sys/kernel/printk
syslogd &&  klogd
if grep -q sysfs /proc/filesystems ; then
	mount -t sysfs none /sys
fi

# do not remove the next line
# LXC_CONFIG_MARKER

OPENQRM_RESOURCE_MAC_ADDRESS=`echo $BOOTIF | sed -e "s/-/:/g"  | sed -e "s/^01://g" | tr '[:lower:]' '[:upper:]'`
OPENQRM_RESOURCE_MANAGED_INTERFACE=`ifconfig -a | grep $OPENQRM_RESOURCE_MAC_ADDRESS | awk {' print $1 '}`
OPENQRM_RESOURCE_IP_ADDRESS=`echo $ip | cut -d':' -f1`
OPENQRM_SERVER_IP_ADDRESS=`echo $ip | cut -d':' -f2`
OPENQRM_RESOURCE_DEFAULT_GATEWAY=`echo $ip | cut -d':' -f3`
OPENQRM_RESOURCE_SUBNETMASK=`echo $ip | cut -d':' -f4`
OPENQRM_RESOURCE_BROADCAST=`ipcalc -b $OPENQRM_RESOURCE_IP_ADDRESS $OPENQRM_RESOURCE_SUBNETMASK | cut -d'=' -f2`

OPENQRM_RESOURCE_PARAMETER_FILE="/var/openqrm/openqrm-resource.conf"
mkdir -p `dirname $OPENQRM_RESOURCE_PARAMETER_FILE`

# adjust arp settings
if [ -f /proc/sys/net/ipv4/conf/$OPENQRM_RESOURCE_MANAGED_INTERFACE/arp_filter ]; then
	echo 1 > /proc/sys/net/ipv4/conf/$OPENQRM_RESOURCE_MANAGED_INTERFACE/arp_filter
fi
if [ -f /proc/sys/net/ipv4/conf/$OPENQRM_RESOURCE_MANAGED_INTERFACE/rp_filter ]; then
	echo 1 > /proc/sys/net/ipv4/conf/$OPENQRM_RESOURCE_MANAGED_INTERFACE/rp_filter
fi

# get the net working
echo "Bringing up $OPENQRM_RESOURCE_MANAGED_INTERFACE:oq"
echo "-> mac-address		: $OPENQRM_RESOURCE_MAC_ADDRESS"
echo "-> ip-address		: $OPENQRM_RESOURCE_IP_ADDRESS"
echo "-> subnetmask		: $OPENQRM_RESOURCE_SUBNETMASK"
echo "-> broadcast		: $OPENQRM_RESOURCE_BROADCAST"
echo "-> default gw		: $OPENQRM_RESOURCE_DEFAULT_GATEWAY"
echo "-> openQRM-server	: $OPENQRM_SERVER_IP_ADDRESS"
ifconfig lo 127.0.0.1 up
ifconfig $OPENQRM_RESOURCE_MANAGED_INTERFACE down
ifconfig $OPENQRM_RESOURCE_MANAGED_INTERFACE up
ifconfig $OPENQRM_RESOURCE_MANAGED_INTERFACE:oq $OPENQRM_RESOURCE_IP_ADDRESS netmask $OPENQRM_RESOURCE_SUBNETMASK broadcast $OPENQRM_RESOURCE_BROADCAST up
if [ "$OPENQRM_RESOURCE_DEFAULT_GATEWAY" != "0.0.0.0" ]; then
	route add default gw $OPENQRM_RESOURCE_DEFAULT_GATEWAY
fi
# force a small delay for the networkcard to initialyze
ping -c 5 -q $OPENQRM_SERVER_IP_ADDRESS > /dev/null

# get resource parameter
echo "Getting resource-parameters ..."
if [ "$id" == "-1" ]; then
	echo "New resource detected ! Adding to the openQRM-server at $OPENQRM_SERVER_IP_ADDRESS"
fi
# sending resource-id will add the resource if not existing (-1 = new resource)
# loop get-parameters in case the network card is still not ready initialyzed
NETWORKCARD_LOOP=0

while (true); do
	# try https first
	if wget --no-check-certificate --random-file=/dev/random -q -O $OPENQRM_RESOURCE_PARAMETER_FILE "https://$OPENQRM_SERVER_IP_ADDRESS/openqrm/action/resource-monitor.php?resource_command=get_parameter&resource_id=$id&resource_mac=$OPENQRM_RESOURCE_MAC_ADDRESS&resource_ip=$OPENQRM_RESOURCE_IP_ADDRESS"; then
		if ! grep "<html>" $OPENQRM_RESOURCE_PARAMETER_FILE >/out; then
        	echo "-> got parameters via https"
			break
		fi
        rm -f /out
	fi
	# try http
	if wget -q -O $OPENQRM_RESOURCE_PARAMETER_FILE "http://$OPENQRM_SERVER_IP_ADDRESS/openqrm/action/resource-monitor.php?resource_command=get_parameter&resource_id=$id&resource_mac=$OPENQRM_RESOURCE_MAC_ADDRESS&resource_ip=$OPENQRM_RESOURCE_IP_ADDRESS"; then
		if ! grep "<html>" $OPENQRM_RESOURCE_PARAMETER_FILE >/out; then
			echo "-> got parameter via http"
			break
		fi
        rm -f /out
	fi
    # no chance ?
	if [ "$NETWORKCARD_LOOP" == "10" ]; then
		echo "ERROR: Could not reach the openQRM-Server at $OPENQRM_SERVER_IP_ADDRESS!"
		# give a shell for the admin
		/bin/bash
	fi
	NETWORKCARD_LOOP=$(( NETWORKCARD_LOOP + 1 ))
	sleep 5
done
# source parameters
. $OPENQRM_RESOURCE_PARAMETER_FILE

# define wget
if [ "$openqrm_web_protocol" == "https" ]; then
    export WGET="wget --no-check-certificate --random-file=/dev/random"
else
    export WGET="wget"
fi

hostname idle$resource_id
$resource_basedir/openqrm/etc/init.d/openqrm-client start

# send idle/available
echo "Sending idle/available to openQRM-server at $OPENQRM_SERVER_IP_ADDRESS"
$WGET -q -O /dev/null "$openqrm_web_protocol://$OPENQRM_SERVER_IP_ADDRESS/openqrm/action/resource-monitor.php?resource_command=update_status&resource_id=$resource_id&resource_state=active&resource_event=available"
# rcs0 will be started here from init
# for initramfs initrds we start a shell here
if [ -x /init ]; then
    echo "Detected initrd as initramfs, starting a shell"
    /bin/bash
fi


