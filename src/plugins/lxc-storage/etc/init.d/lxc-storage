#!/bin/bash
# this is the boot-service init script for the Lxc-server hosts
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2010, Matthias Rechenburg <matt@openqrm.com>
#

OPENQRM_SERVER_BASE_DIR=$(pushd $(dirname $0)/../../../../.. > /dev/null; echo $PWD; popd > /dev/null)
# for including the package functions
export OPENQRM_SOURCE_DIR="$OPENQRM_SERVER_BASE_DIR/openqrm/"
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-package-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/lxc-storage/include/openqrm-plugin-lxc-storage-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/lxc-storage/etc/openqrm-plugin-lxc-storage.conf
if [ -f $OPENQRM_RESOURCE_PARAMETER_FILE ]; then
	. $OPENQRM_RESOURCE_PARAMETER_FILE
	OPENQRM_SERVER_IP=$resource_openqrmserver
elif [ -f $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf ]; then
	. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
	. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-server-functions
	openqrm_server_get_config
	OPENQRM_SERVER_IP=$OPENQRM_SERVER_IP_ADDRESS
fi
OPENQRM_VM_DIR="/var/lib/lxc"
export OPENQRM_VM_DIR

# define wget to use with https
if [ "$openqrm_web_protocol" == "https" ]; then
	WGET="wget -q --no-check-certificate"
else
	WGET="wget -q"
fi

# do not start on the intitrd
if [ -f /etc/initrd-devices.conf ]; then
	exit 0
fi


function lxc_start() {
	echo "Starting the openQRM lxc-storage-plugin"
	# check if this is a lxc host
	if ! which lxc-start 1>/dev/null; then
		exit 0
	fi
	# be sure we have screen
	export FORCE_INSTALL=true
	openqrm_install_os_dependency screen

	# get initrd + linuxrc to create idle vms
	if ! $WGET -O $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/lxc-storage/etc/templates/openqrm-initrd-default.tgz  $openqrm_web_protocol://$resource_openqrmserver/openqrm/boot-service/openqrm-initrd-lxc.tgz; then
		echo "ERROR: Could not download the lxc-initrd-template from openQRM server at $openqrm_web_protocol://$resource_openqrmserver !"
		return 1
	fi
	if ! $WGET -O $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/lxc-storage/etc/templates/openqrm-client.tgz  $openqrm_web_protocol://$resource_openqrmserver/openqrm/boot-service/openqrm-client.tgz; then
		echo "ERROR: Could not download the openqrm-client.tgz from openQRM server at $openqrm_web_protocol://$resource_openqrmserver !"
		return 1
	fi

	# start the vm status autostart
	if [ -d "$OPENQRM_VM_DIR" ]; then
		for VM_CONFIG in `find $OPENQRM_VM_DIR/* -name autostart.$resource_id 2>/dev/null`; do
			VM_NAME=`dirname $VM_CONFIG`
			VM_NAME=`basename $VM_NAME`
			# check if not running already
			if ps ax | grep "lxc-start -n $VM_NAME" | grep -v grep 1>/dev/null; then
				echo "- VM $VM_NAME is running already, not auto-starting it ..."
				continue
			fi
			echo "- auto-starting VM $VM_NAME"
			# get mac
			VM_MAC_ADRESS=`grep lxc.network.hwaddr $OPENQRM_VM_DIR/$VM_NAME/config | cut -d'=' -f2 | awk '{ print $1 }'`
			if [ "$VM_MAC_ADRESS" != "" ]; then
				VM_ROOTFS=`grep lxc.rootfs $OPENQRM_VM_DIR/$VM_NAME/config | cut -d'=' -f2 | awk '{ print $1 }'`
				VM_STATE=`basename $VM_ROOTFS`
				if [ "$VM_STATE" == "root" ]; then
					# here we found a VM that should be active, anyway we have to check the openQRM server
					# get parameters
					if ! $WGET -O $OPENQRM_VM_DIR/$VM_NAME/openqrm-resource.conf "$openqrm_web_protocol://$OPENQRM_SERVER_IP/openqrm/action/resource-monitor.php?resource_command=get_parameter&resource_mac=$VM_MAC_ADRESS"; then
						echo "- Could not get parameters for VM $VM_NAME, not auto-starting it ..."
						continue
					fi
					. $OPENQRM_VM_DIR/$VM_NAME/openqrm-resource.conf
					# is really active ?
					if [ "$image_name" == "idle" ]; then
						# if not deassign rootfs to idle
						echo "- VM $VM_NAME is not active but idle, adjusting VM config"
						sed -i -e "s#lxc.rootfs.*#lxc.rootfs = $OPENQRM_VM_DIR/$VM_NAME/idle/#g" $OPENQRM_VM_DIR/$VM_NAME/config
					else
						if ! grep -w $OPENQRM_VM_DIR/$VM_NAME/root /proc/mounts 1>/dev/null; then
							echo "- VM $VM_NAME is active, mounting $image_rootdevice"
							mount -t $image_rootfstype $image_rootdevice $OPENQRM_VM_DIR/$VM_NAME/root
						else
							echo "- VM $VM_NAME is active, root-device $image_rootdevice already mounted"
						fi
					fi

				else
					echo "- VM $VM_NAME is idle"
				fi
				# start lxc VM
				echo "- Starting VM $VM_NAME now ...."
				$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/lxc-storage/bin/openqrm-lxc-storage-vm start -n $VM_NAME
			fi
		done
	fi

}


function lxc_stop() {
	echo "Stopping the openQRM lxc-storage-plugin"
	# we do not stop VMs for now
#	if [ -d "$OPENQRM_VM_DIR" ]; then
#		for VM_CONFIG in `find $OPENQRM_VM_DIR/* -name autostart.$resource_id 2>/dev/null`; do
#			VM_NAME=`dirname $VM_CONFIG`
#			VM_NAME=`basename $VM_NAME`
#			echo "- Stopping VM $VM_NAME now ...."
#			$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/lxc-storage/bin/openqrm-lxc-storage-vm stop -n $VM_NAME
#			# re-create autostart
#			touch $OPENQRM_VM_DIR/$VM_NAME/autostart.$resource_id
#		done
#	fi

}





case "$1" in
	start)
		lxc_start
		;;
	stop)
		lxc_stop
		;;
	restart)
		lxc_stop
		sleep 1
		lxc_start
		;;
	*)
		echo "Usage: $0 {start|stop|restart}"
		exit 1

esac
exit $?













