#!/bin/bash
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2011, openQRM Enterprise GmbH <info@openqrm-enterprise.com>
#

OPENQRM_SERVER_BASE_DIR=$(pushd $(dirname $0)/../../../../.. > /dev/null; echo $PWD; popd > /dev/null)
# for including the package functions
export OPENQRM_SOURCE_DIR="$OPENQRM_SERVER_BASE_DIR/openqrm/"
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-package-functions
. $OPENQRM_RESOURCE_PARAMETER_FILE
OPENQRM_SERVER_IP=$resource_openqrmserver
# define wget to use with https
if [ "$openqrm_web_protocol" == "https" ]; then
	WGET_NO_CERT_CHECK="--no-check-certificate"
fi
# do not run on idle resources
if [ "$resource_image" == "idle" ]; then
	exit 0
fi


function local_storage_start() {
	local_storage_stop 1>/dev/null 2>&1
	echo "Starting the openQRM local-storage plugin"
	linuxcoe_stop 1>/dev/null 2>&1
	# set the image password
	local id=$image_id
	if  wget -q $WGET_NO_CERT_CHECK -O /tmp/iauth.$id $openqrm_web_protocol://$resource_openqrmserver/openqrm/action/image-auth/iauth.$id 2>/tmp/iauth.log; then
		cryptedpassword=`cat /tmp/iauth.$id`
		rm -f /tmp/iauth.$id /tmp/iauth.log
		sed -i "s#^root:[^:]*#root:$cryptedpassword#" /etc/shadow
		sed -i "s#^root:[^:]*#root:$cryptedpassword#" /etc/shadow-
	fi
	return 0
}


function local_storage_stop() {
	echo "Stopping the openQRM local_storage plugin"
	return 0
}



case "$1" in
	start)
		local_storage_start
		;;
	stop)
		local_storage_stop
		;;
	restart)
		local_storage_stop
		sleep 1
		local_storage_start
		;;
	*)
		echo "Usage: $0 {start|stop|restart}"
		exit 1

esac
exit $?

